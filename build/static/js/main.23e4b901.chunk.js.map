{"version":3,"sources":["reportWebVitals.js","seedPalettes.js","Page.js","PaletteChip.js","Footer.js","PaletteList.js","helpers.js","ColorChip.js","Navbar.js","NotFound.js","Palette.js","ColorShades.js","CreatePaletteNav.js","CreatePaletteTools.js","SortableChip.js","SortableList.js","CreatePalette.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","seedPalettes","paletteName","id","colors","name","value","Page","props","className","children","PaletteChip","palette","deletePalette","useState","dialogOpen","setDialogOpen","navigate","useNavigate","handleDialogClose","map","c","style","background","uuid","onClick","title","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Footer","href","target","rel","PaletteList","palettes","p","to","levels","analyzeContrast","foregroundColor","backgroundColor","chroma","contrast","toKebabCase","string","trim","toLowerCase","replace","generateColorScale","hexColor","numColors","scale","darken","hex","brighten","getColorRange","mode","generatePalette","seedPalette","newPalette","level","color","length","reverse","entries","idx","hexValue","newColor","rgb","css","rgba","push","ColorChip","paletteId","colorFormat","colorId","copied","setCopied","goodContrast","fontColor","btnBgColor","text","onCopy","setTimeout","e","stopPropagation","Navbar","updateLevel","updateColorFormat","NavbarClassName","setColorFormat","React","msgOpen","setMsgOpen","handleMsgClose","event","reason","msgAction","Fragment","IconButton","size","fontSize","defaultValue","min","max","step","onAfterChange","FormControl","variant","fullWidth","Select","labelId","label","onChange","sx","fontWeight","borderBottomColor","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","toUpperCase","ContentProps","action","NotFound","location","useLocation","pathname","Palette","renderElements","params","useParams","find","setLevel","fullPalette","colorChips","newLevel","ColorShades","format","includes","colorName","shades","seedColor","findColor","concat","filter","getColorShades","colorShades","CreatePaletteNav","handleSavePalette","newPaletteName","setNewPaletteName","handleClose","useEffect","ValidatorForm","addValidationRule","every","Stack","spacing","direction","onSubmit","onError","errors","console","log","validators","errorMessages","autoFocus","type","CreatePaletteTools","addNewColor","clearPalette","maxColors","currentColor","setCurrentColor","newColorName","setNewColorName","duplicateColor","setDuplicateColor","paletteIsFull","randomColor","random","existingColor","margin","disabled","SortableChip","SortableElement","deleteColor","SortableList","SortableContainer","i","index","starterColors","drawerWidth","Main","styled","shouldForwardProp","prop","theme","flexGrow","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","width","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","CreatePalette","savePalette","drawerOpen","setDrawerOpen","setColors","Box","position","boxShadow","Toolbar","edge","mr","Drawer","flexShrink","boxSizing","anchor","updatedColors","axis","onSortEnd","oldIndex","newIndex","arrayMove","distance","App","storedPalettes","JSON","parse","window","localStorage","getItem","setPalettes","setItem","stringify","StyledEngineProvider","injectFirst","TransitionGroup","component","CSSTransition","classNames","timeout","path","element","paletteToDelete","document","getElementById","opacity","remainingPalettes","key","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.23e4b901.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const seedPalettes = [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    colors: [\n      { name: \"red\", value: \"#F44336\" },\n      { name: \"pink\", value: \"#E91E63\" },\n      { name: \"purple\", value: \"#9C27B0\" },\n      { name: \"deeppurple\", value: \"#673AB7\" },\n      { name: \"indigo\", value: \"#3F51B5\" },\n      { name: \"blue\", value: \"#2196F3\" },\n      { name: \"lightblue\", value: \"#03A9F4\" },\n      { name: \"cyan\", value: \"#00BCD4\" },\n      { name: \"teal\", value: \"#009688\" },\n      { name: \"green\", value: \"#4CAF50\" },\n      { name: \"lightgreen\", value: \"#8BC34A\" },\n      { name: \"lime\", value: \"#CDDC39\" },\n      { name: \"yellow\", value: \"#FFEB3B\" },\n      { name: \"amber\", value: \"#FFC107\" },\n      { name: \"orange\", value: \"#FF9800\" },\n      { name: \"deeporange\", value: \"#FF5722\" },\n      { name: \"brown\", value: \"#795548\" },\n      { name: \"grey\", value: \"#9E9E9E\" },\n      { name: \"bluegrey\", value: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    colors: [\n      { name: \"Turquoise\", value: \"#1abc9c\" },\n      { name: \"Emerald\", value: \"#2ecc71\" },\n      { name: \"PeterRiver\", value: \"#3498db\" },\n      { name: \"Amethyst\", value: \"#9b59b6\" },\n      { name: \"WetAsphalt\", value: \"#34495e\" },\n      { name: \"GreenSea\", value: \"#16a085\" },\n      { name: \"Nephritis\", value: \"#27ae60\" },\n      { name: \"BelizeHole\", value: \"#2980b9\" },\n      { name: \"Wisteria\", value: \"#8e44ad\" },\n      { name: \"MidnightBlue\", value: \"#2c3e50\" },\n      { name: \"SunFlower\", value: \"#f1c40f\" },\n      { name: \"Carrot\", value: \"#e67e22\" },\n      { name: \"Alizarin\", value: \"#e74c3c\" },\n      { name: \"Clouds\", value: \"#ecf0f1\" },\n      { name: \"Concrete\", value: \"#95a5a6\" },\n      { name: \"Orange\", value: \"#f39c12\" },\n      { name: \"Pumpkin\", value: \"#d35400\" },\n      { name: \"Pomegranate\", value: \"#c0392b\" },\n      { name: \"Silver\", value: \"#bdc3c7\" },\n      { name: \"Asbestos\", value: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    colors: [\n      { name: \"Sunflower\", value: \"#FFC312\" },\n      { name: \"Energos\", value: \"#C4E538\" },\n      { name: \"BlueMartina\", value: \"#12CBC4\" },\n      { name: \"LavenderRose\", value: \"#FDA7DF\" },\n      { name: \"BaraRose\", value: \"#ED4C67\" },\n      { name: \"RadiantYellow\", value: \"#F79F1F\" },\n      { name: \"AndroidGreen\", value: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", value: \"#1289A7\" },\n      { name: \"LavenderTea\", value: \"#D980FA\" },\n      { name: \"VerryBerry\", value: \"#B53471\" },\n      { name: \"PuffinsBill\", value: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", value: \"#009432\" },\n      { name: \"MerchantMarineBlue\", value: \"#0652DD\" },\n      { name: \"ForgottenPurple\", value: \"#9980FA\" },\n      { name: \"HollyHock\", value: \"#833471\" },\n      { name: \"RedPigment\", value: \"#EA2027\" },\n      { name: \"TurkishAqua\", value: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", value: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", value: \"#5758BB\" },\n      { name: \"MagentaPurple\", value: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    colors: [\n      { name: \"LightGreenishBlue\", value: \"#55efc4\" },\n      { name: \"FadedPoster\", value: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", value: \"#74b9ff\" },\n      { name: \"ShyMoment\", value: \"#a29bfe\" },\n      { name: \"CityLights\", value: \"#dfe6e9\" },\n      { name: \"MintLeaf\", value: \"#00b894\" },\n      { name: \"RobinsEggBlue\", value: \"#00cec9\" },\n      { name: \"ElectronBlue\", value: \"#0984e3\" },\n      { name: \"ExodusFruit\", value: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", value: \"#b2bec3\" },\n      { name: \"SourLemon\", value: \"#ffeaa7\" },\n      { name: \"FirstDate\", value: \"#fab1a0\" },\n      { name: \"PinkGlamour\", value: \"#ff7675\" },\n      { name: \"Pico8Pink\", value: \"#fd79a8\" },\n      { name: \"AmericanRiver\", value: \"#636e72\" },\n      { name: \"BrightYarrow\", value: \"#fdcb6e\" },\n      { name: \"OrangeVille\", value: \"#e17055\" },\n      { name: \"Chi-Gong\", value: \"#d63031\" },\n      { name: \"PrunusAvium\", value: \"#e84393\" },\n      { name: \"DraculaOrchid\", value: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    colors: [\n      { name: \"Beekeeper\", value: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", value: \"#ffbe76\" },\n      { name: \"PinkGlamour\", value: \"#ff7979\" },\n      { name: \"JuneBud\", value: \"#badc58\" },\n      { name: \"CoastalBreeze\", value: \"#dff9fb\" },\n      { name: \"Turbo\", value: \"#f9ca24\" },\n      { name: \"QuinceJelly\", value: \"#f0932b\" },\n      { name: \"CarminePink\", value: \"#eb4d4b\" },\n      { name: \"PureApple\", value: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", value: \"#c7ecee\" },\n      { name: \"MiddleBlue\", value: \"#7ed6df\" },\n      { name: \"Heliotrope\", value: \"#e056fd\" },\n      { name: \"ExodusFruit\", value: \"#686de0\" },\n      { name: \"DeepKoamaru\", value: \"#30336b\" },\n      { name: \"SoaringEagle\", value: \"#95afc0\" },\n      { name: \"GreenlandGreen\", value: \"#22a6b3\" },\n      { name: \"SteelPink\", value: \"#be2edd\" },\n      { name: \"Blurple\", value: \"#4834d4\" },\n      { name: \"DeepCove\", value: \"#130f40\" },\n      { name: \"WizardGrey\", value: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    colors: [\n      { name: \"ProtossPylon\", value: \"#00a8ff\" },\n      { name: \"Periwinkle\", value: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", value: \"#fbc531\" },\n      { name: \"DownloadProgress\", value: \"#4cd137\" },\n      { name: \"Seabrook\", value: \"#487eb0\" },\n      { name: \"VanaDylBlue\", value: \"#0097e6\" },\n      { name: \"MattPurple\", value: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", value: \"#e1b12c\" },\n      { name: \"SkirretGreen\", value: \"#44bd32\" },\n      { name: \"Naval\", value: \"#40739e\" },\n      { name: \"NasturcianFlower\", value: \"#e84118\" },\n      { name: \"LynxWhite\", value: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", value: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", value: \"#273c75\" },\n      { name: \"BlueNights\", value: \"#353b48\" },\n      { name: \"HarleyOrange\", value: \"#c23616\" },\n      { name: \"HintOfPensive\", value: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", value: \"#718093\" },\n      { name: \"PicoVoid\", value: \"#192a56\" },\n      { name: \"ElectroMagnetic\", value: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    colors: [\n      { name: \"JacksonsPurple\", value: \"#40407a\" },\n      { name: \"C64Purple\", value: \"#706fd3\" },\n      { name: \"SwanWhite\", value: \"#f7f1e3\" },\n      { name: \"SummerSky\", value: \"#34ace0\" },\n      { name: \"CelestialGreen\", value: \"#33d9b2\" },\n      { name: \"LuckyPoint\", value: \"#2c2c54\" },\n      { name: \"Liberty\", value: \"#474787\" },\n      { name: \"HotStone\", value: \"#aaa69d\" },\n      { name: \"DevilBlue\", value: \"#227093\" },\n      { name: \"PalmSpringsSplash\", value: \"#218c74\" },\n      { name: \"FlourescentRed\", value: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", value: \"#ff793f\" },\n      { name: \"CrocodileTooth\", value: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", value: \"#ffb142\" },\n      { name: \"SpicedButterNut\", value: \"#ffda79\" },\n      { name: \"EyeOfNewt\", value: \"#b33939\" },\n      { name: \"ChileanFire\", value: \"#cd6133\" },\n      { name: \"GreyPorcelain\", value: \"#84817a\" },\n      { name: \"AlamedaOchre\", value: \"#cc8e35\" },\n      { name: \"Desert\", value: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    colors: [\n      { name: \"OrchidOrange\", value: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", value: \"#25CCF7\" },\n      { name: \"HoneyGlow\", value: \"#EAB543\" },\n      { name: \"SweetGarden\", value: \"#55E6C1\" },\n      { name: \"FallingStar\", value: \"#CAD3C8\" },\n      { name: \"RichGardenia\", value: \"#F97F51\" },\n      { name: \"ClearChill\", value: \"#1B9CFC\" },\n      { name: \"WhitePepper\", value: \"#F8EFBA\" },\n      { name: \"Keppel\", value: \"#58B19F\" },\n      { name: \"ShipsOfficer\", value: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", value: \"#B33771\" },\n      { name: \"BlueBell\", value: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", value: \"#FD7272\" },\n      { name: \"OasisStream\", value: \"#9AECDB\" },\n      { name: \"BrightUbe\", value: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", value: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", value: \"#182C61\" },\n      { name: \"SasquatchSocks\", value: \"#FC427B\" },\n      { name: \"PineGlade\", value: \"#BDC581\" },\n      { name: \"HighlighterLavender\", value: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n\n    colors: [\n      { name: \"FlatFlesh\", value: \"#fad390\" },\n      { name: \"MelonMelody\", value: \"#f8c291\" },\n      { name: \"Livid\", value: \"#6a89cc\" },\n      { name: \"Spray\", value: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", value: \"#b8e994\" },\n      { name: \"SquashBlossom\", value: \"#f6b93b\" },\n      { name: \"MandarinRed\", value: \"#e55039\" },\n      { name: \"AzraqBlue\", value: \"#4a69bd\" },\n      { name: \"Dupain\", value: \"#60a3bc\" },\n      { name: \"AuroraGreen\", value: \"#78e08f\" },\n      { name: \"IcelandPoppy\", value: \"#fa983a\" },\n      { name: \"TomatoRed\", value: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", value: \"#1e3799\" },\n      { name: \"GoodSamaritan\", value: \"#3c6382\" },\n      { name: \"Waterfall\", value: \"#38ada9\" },\n      { name: \"CarrotOrange\", value: \"#e58e26\" },\n      { name: \"JalapenoRed\", value: \"#b71540\" },\n      { name: \"DarkSapphire\", value: \"#0c2461\" },\n      { name: \"ForestBlues\", value: \"#0a3d62\" },\n      { name: \"ReefEncounter\", value: \"#079992\" }\n    ]\n  }\n];\n\nexport default seedPalettes;","import './css/Page.css';\n\n// This component is used as a helper for page transitions\n// using TransitionGroup and CSSTransition from react-transition-group\n// It should wrap any top-level route component.\n\nfunction Page(props) {\n  return (\n    <div className=\"Page\">\n       {props.children}\n    </div>\n  );\n}\n\nexport default Page;","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport './css/PaletteChip.css';\n\n\nfunction PaletteChip(props) {\n  const { palette, deletePalette } = props;\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDelete = () => {\n    deletePalette(palette);\n    // Normally we wouldn't need this as the component will re-render\n    // with the default false state, but we are triggering a fade-out\n    // transition first using setTimeout in deletePalette. As a result\n    // we close the dialog right away so we can see the fadeout.\n    setDialogOpen(false);\n  };\n\n  const gotoPalette = () => {\n    navigate(`/palette/${palette.id}`);\n  };\n\n  const colors = palette.colors.map(c => (\n    <div\n      key={uuid()}\n      className=\"PaletteChip-color\"\n      style={{ background: c.value }}\n    >\n    </div>\n  ));\n\n  return (\n    <div className=\"PaletteChip\" id={palette.id}>\n      <div className=\"PaletteChip-colors\" onClick={gotoPalette}>\n        {colors}\n      </div>\n      <div className=\"PaletteChip-info\">\n        <h2 className=\"PaletteChip-name truncate\">{palette.paletteName}</h2>\n        <button className=\"btn\" title=\"Delete palette\" onClick={handleDialogOpen}>\n          <DeleteIcon className=\"PaletteChip-trash-btn\" />\n        </button>\n      </div>\n\n      {/* Are you sure you want to delete palette dialog */}\n      <Dialog\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Are you sure?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You are about to delete <strong>{palette.paletteName}</strong>.\n            This action can't be undone.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <button className=\"btn btn--exit\" onClick={handleDialogClose}>\n            No, cancel\n          </button>\n          <button className=\"btn btn--delete\" onClick={handleDelete}>\n            Yes, delete\n          </button>\n        </DialogActions>\n      </Dialog>\n\n    </div>\n  );\n}\n\n\nexport default PaletteChip;","import './css/Footer.css';\n\n\nfunction Footer(props) {\n  return (\n    <div className=\"Footer\">\n      Built by <a href=\"https://github.com/jessicarush/colour-app\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n      jessicarush </a>\n      with React.\n    </div>\n  );\n}\n\n\nexport default Footer;","import { Link } from 'react-router-dom';\n\nimport PaletteChip from './PaletteChip';\nimport Footer from './Footer';\nimport './css/PaletteList.css';\n\n\nfunction PaletteList(props) {\n  const { deletePalette } = props;\n\n  const palettes = props.seedPalettes.map(p => (\n    <PaletteChip key={p.id} palette={p} deletePalette={deletePalette} />\n  ));\n\n  return (\n    <div className=\"PaletteList\">\n      <div className=\"PaletteList-head\">\n        <h1 className=\"PaletteList-header\">\n          <Link to={\"/\"}>&lt;Colour Palettes /&gt;</Link>\n        </h1>\n        <Link to={\"/create\"} className=\"PaletteList-new-btn\">+ create<span> palette</span></Link>\n      </div>\n      <div className=\"PaletteList-palettes\">\n        {/* Palettes go here */}\n        {palettes}\n      </div>\n      <div className=\"PaletteList-footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\n\nexport default PaletteList;","import chroma from 'chroma-js';\n\n\nconst levels = [100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction analyzeContrast(foregroundColor, backgroundColor) {\n  // Computes the WCAG contrast ratio between two colors.\n  // A minimum contrast of 4.5 is recommended to ensure that text is still\n  // readable against a background color.\n  const contrast = chroma.contrast(foregroundColor, backgroundColor);\n  return contrast >= 2.5;\n}\n\nfunction toKebabCase(string) {\n  // Returns a kebab case string\n  return string.trim().toLowerCase().replace(/ /g, '-');\n}\n\nfunction getColorRange(hexColor) {\n  // Returns an array of [darker color, color, white]\n  const startColor = chroma(hexColor).darken(1.5).hex();\n  // const endColor = \"#fff\";\n  const endColor = chroma(hexColor).brighten(1.5).hex();\n  return [startColor, hexColor, endColor];\n}\n\nfunction generateColorScale(hexColor, numColors) {\n  // Returns an array of hex colors\n  return chroma.scale(getColorRange(hexColor)).mode('lab').colors(numColors);\n}\n\nfunction generatePalette(seedPalette) {\n  let newPalette = {\n    paletteName: seedPalette.paletteName,\n    id: seedPalette.id,\n    colors: {}\n  };\n\n  for (let level of levels) {\n    newPalette.colors[level] = [];\n  }\n\n  for (let color of seedPalette.colors) {\n    let scale = generateColorScale(color.value, levels.length).reverse();\n    for (let [idx, hexValue] of scale.entries()) {\n      let level = levels[idx];\n      let newColor = {\n        name: `${color.name} ${level}`,\n        id: toKebabCase(color.name),\n        hex: hexValue,\n        rgb: chroma(hexValue).css(),\n        rgba: chroma(hexValue).css().replace('rgb', 'rgba').replace(')', ',1)')\n      };\n      newPalette.colors[level].push(newColor);\n    }\n  }\n  return newPalette;\n}\n\nexport { analyzeContrast, toKebabCase };\nexport default generatePalette;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport chroma from 'chroma-js';\n\nimport { analyzeContrast } from './helpers';\nimport './css/ColorChip.css';\n\n\nfunction ColorChip(props) {\n  // props\n  const paletteId = props.paletteId;\n  const colorFormat = props.colorFormat;\n  const colorId = props.color.id;\n  const name = props.color.name;\n  const color = props.color[colorFormat];\n  // state\n  const [copied, setCopied] = useState(false);\n\n  const goodContrast = analyzeContrast(\"fff\", color);\n  const fontColor = goodContrast ? '#fff' : chroma(color).darken(3);\n  const btnBgColor = goodContrast ? 'rgba(0,0,0,.15)' : 'rgba(255,255,255,.35)';\n\n  const updateCopied = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1200);\n  };\n\n  return (\n    <CopyToClipboard text={color} onCopy={updateCopied}>\n      <div className={\"ColorChip\"} style={{ background: color }}>\n\n        <div\n          className={`ColorChip-copy-container ${copied && \"transform\"}`}\n          style={{ background: color }}\n        >\n          <button\n            className=\"ColorChip-copy-btn\"\n            style={{ color: fontColor, background: btnBgColor }}\n          >\n            Copy\n          </button>\n          <div\n            className={`ColorChip-copy-msg ${copied ? \"show\" : \"\"}`}\n            style={{ color: fontColor, background: color }}\n          >\n            <p>Copied {color.toLowerCase()}</p>\n          </div>\n        </div>\n\n        <div className=\"ColorChip-info-container\">\n          <h2 className=\"ColorChip-info-name truncate\" style={{ color: fontColor }}>\n            {name}\n          </h2>\n\n          {/* The more button is only rendered in Palette.js */}\n          {paletteId && (\n            <Link\n              to={`/palette/${paletteId}/${colorId}/${colorFormat}`}\n              className=\"ColorChip-info-more\"\n              style={{ color: fontColor}}\n              onClick={e => { e.stopPropagation() }}\n            >\n              More +\n            </Link>\n          )}\n        </div>\n\n      </div>\n    </CopyToClipboard>\n  );\n}\n\n\nexport default ColorChip;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport FormControl from '@mui/material/FormControl';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport './css/Navbar.css';\n\n\nfunction Navbar(props) {\n  // props\n  const { level, updateLevel, updateColorFormat, NavbarClassName } = props;\n  // state\n  const [colorFormat, setColorFormat] = useState(props.colorFormat || 'hex');\n  const [msgOpen, setMsgOpen] = React.useState(false);\n\n  function handleColorFormatChange(e) {\n    setColorFormat(e.target.value);\n    updateColorFormat(e.target.value);\n    handleMsgOpen();\n  }\n\n  function handleMsgOpen() {\n    setMsgOpen(true);\n  };\n\n  function handleMsgClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setMsgOpen(false);\n  };\n\n  // The \"action\" renders after the message, at the end of the snackbar.\n  const msgAction = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleMsgClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  )\n\n  return (\n    <header className={`Navbar ${NavbarClassName}`}>\n      <div className=\"Navbar-head\">\n        <h1 className=\"Navbar-header\">\n          <Link to={\"/\"}>&lt;Colour Palettes /&gt;</Link>\n        </h1>\n      </div>\n\n      {/* The slider is only rendered when level prop exists (Palette.js) */}\n      {level && (\n        <div className=\"Navbar-slider-items\">\n          <div className=\"Navbar-slider-label\">\n            <span>Level: {level} </span>\n          </div>\n          <div className=\"Navbar-slider\">\n            <Slider\n              defaultValue={level}\n              min={100}\n              max={900}\n              step={100}\n              onAfterChange={updateLevel}\n            />\n          </div>\n        </div>\n      )}\n\n      <div className=\"Navbar-format\">\n        <FormControl variant=\"standard\" fullWidth>\n          <Select\n            labelId=\"color-format-label\"\n            id=\"color-format\"\n            value={colorFormat}\n            label=\"color-format\"\n            onChange={handleColorFormatChange}\n            sx={{\n              fontSize: '.8rem',\n              fontWeight: '600',\n              ':before': { borderBottomColor: '#fff' },\n              // underline when selected\n              // ':after': { borderBottomColor: 'green' },\n            }}\n          >\n            <MenuItem value=\"hex\">HEX</MenuItem>\n            <MenuItem value=\"rgb\">RGB</MenuItem>\n            <MenuItem value=\"rgba\">RGBA</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={msgOpen}\n        autoHideDuration={4000}\n        message={\n          <span id=\"message-id\">\n            Color format changed to {colorFormat.toUpperCase()}\n          </span>\n        }\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        action={msgAction}\n        onClose={handleMsgClose}\n      />\n    </header>\n  );\n}\n\n\nexport default Navbar;","import { Link, useLocation } from 'react-router-dom';\nimport Footer from './Footer';\nimport './css/NotFound.css';\n\n\nfunction NotFound() {\n  let location = useLocation();\n\n  return (\n    <div className=\"NotFound\">\n      <header>\n        <h1 className=\"PaletteList-header\">\n          <Link to={\"/\"}>&lt;Colour Palettes /&gt;</Link>\n        </h1>\n      </header>\n      <main>\n        <h2 className=\"NotFound-colorful\">\n          <span className=\"a\">N</span>\n          <span className=\"b\">o</span>\n          <span className=\"c\">t </span>\n          <span className=\"d\">F</span>\n          <span className=\"e\">o</span>\n          <span className=\"f\">u</span>\n          <span className=\"g\">n</span>\n          <span className=\"h\">d</span>\n          .\n        </h2>\n        <p className=\"\">Nothing exists at <strong>{location.pathname}</strong></p>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\n\nexport default NotFound","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\n\nimport ColorChip from './ColorChip';\nimport Navbar from './Navbar';\nimport NotFound from './NotFound';\nimport generatePalette from './helpers';\nimport './css/Palette.css';\n\n\nfunction Palette(props) {\n  const { seedPalettes } = props;\n  // URL params\n  const params = useParams();\n  const seedPalette = findPalette(params.id);\n  // State\n  const [level, setLevel] = useState(500);\n  const [colorFormat, setColorFormat] = useState('hex');\n\n  const updateLevel = (newLevel) => {\n    setLevel(newLevel);\n  };\n\n  const updateColorFormat = (colorFormat) => {\n    setColorFormat(colorFormat);\n  };\n\n  function findPalette(id) {\n    return seedPalettes.find(palette => palette.id === id);\n  }\n\n  let renderElements;\n\n  if (seedPalette) {\n    // Get Palette\n    const fullPalette = generatePalette(seedPalette);\n    const palette = fullPalette.colors[level];\n    const colorChips = palette.map(color => (\n      <ColorChip key={uuid()} color={color} colorFormat={colorFormat} paletteId={fullPalette.id} />\n    ));\n\n    renderElements = (\n      <div className=\"Palette\">\n        {/* navbar */}\n        <Navbar\n          NavbarClassName=\"Palette-navbar\"\n          level={level}\n          updateLevel={updateLevel}\n          updateColorFormat={updateColorFormat}\n        />\n\n        {/* color chips */}\n        <main className=\"Palette-colors\">\n          {colorChips}\n        </main>\n\n        {/* footer */}\n        <footer className=\"Palette-footer\">\n          <h2 className=\"Palette-footer-name\">{fullPalette.paletteName}</h2>\n        </footer>\n      </div>\n    )\n  }\n\n  return renderElements || <NotFound />;\n}\n\n\nexport default Palette;","import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\n\nimport ColorChip from './ColorChip';\nimport Navbar from './Navbar';\nimport NotFound from './NotFound';\nimport generatePalette, { toKebabCase } from './helpers';\nimport './css/ColorShades.css';\n\n\n// Opportunity for improvement: color format should be stored in localStorage\n\nfunction ColorShades(props) {\n  // props\n  const { seedPalettes } = props;\n  // url params\n  const params = useParams();\n  const format = ['hex', 'rgb', 'rgba'].includes(params.format) ? params.format : 'hex';\n  const paletteId = params.paletteId;\n  const colorId = params.colorId;\n  // state\n  const [colorFormat, setColorFormat] = useState(format);\n\n  const [colorName, paletteName, colorShades] = getColorShades(colorId, paletteId);\n\n  const updateColorFormat = (colorFormat) => {\n    setColorFormat(colorFormat);\n  };\n\n  function findPalette(id) {\n    return seedPalettes.find(palette => palette.id === id);\n  }\n\n  function findColor(colorId, seedPalette) {\n    return seedPalette.colors.find(c => toKebabCase(c.name) === colorId);\n  }\n\n  function getColorShades(colorId, paletteId) {\n    let colorName, paletteName, shades;\n    // Get Palette (check if palette exists)\n    const seedPalette = findPalette(paletteId);\n\n    if (seedPalette) {\n      // Get color shades (check if color exists)\n      const seedColor = findColor(colorId, seedPalette);\n\n      if (seedColor) {\n        colorName = seedColor.name;\n        paletteName = seedPalette.paletteName;\n        shades = [];\n        const fullPalette = generatePalette(seedPalette);\n\n        for (let level in fullPalette.colors) {\n          shades = shades.concat(\n            fullPalette.colors[level].filter(c => c.id === colorId)\n          );\n        }\n      }\n    }\n    return [colorName, paletteName, shades];\n  }\n\n  let renderElements;\n\n  if (colorShades) {\n    const colorChips = colorShades.map(color => (\n      <ColorChip key={uuid()} color={color} colorFormat={colorFormat} />\n    ));\n\n    renderElements = (\n      <div className=\"ColorShades\">\n        {/* navbar */}\n        <Navbar\n          colorFormat={colorFormat}\n          NavbarClassName=\"ColorShades-navbar\"\n          updateColorFormat={updateColorFormat}\n        />\n\n        {/*  color chips */}\n        <main className=\"ColorShades-colors\">\n          {colorChips}\n        </main>\n\n        {/* footer */}\n        <footer className=\"ColorShades-footer\">\n          <h2 className=\"ColorShades-footer-name\">\n            {colorName}<span className=\"ColorShades-footer-light\"> / </span>\n            <Link to={`/palette/${paletteId}`}>{paletteName}</Link>\n          </h2>\n        </footer>\n      </div>\n    )\n  }\n\n  return renderElements || <NotFound />;\n}\n\n\nexport default ColorShades;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Stack from '@mui/material/Stack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport './css/CreatePaletteNav.css';\n\n\nfunction CreatePaletteNav(props) {\n  // props\n  const { handleSavePalette, seedPalettes } = props;\n  // state\n  const [newPaletteName, setNewPaletteName] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const updateNewPaletteName = (e) => {\n    setNewPaletteName(e.target.value);\n  }\n\n  const handleSubmit = () => {\n    handleSavePalette(newPaletteName);\n    setDialogOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n  }\n\n  /* Custom validators for TextValidator ----------------------------------- */\n  useEffect(() => {\n    ValidatorForm.addValidationRule('paletteNameUnique', (value) => {\n      return seedPalettes.every(p => p.paletteName.toLowerCase() !== value.trim().toLowerCase());\n    });\n  });\n\n  return (\n    <React.Fragment>\n\n      <h1 className=\"CreatePaletteNav-header\">Create a palette</h1>\n      <Stack spacing={.5} direction=\"row\" className=\"CreatePaletteNav-btns\">\n        <Link to={\"/\"} className=\"CreatePaletteNav-close btn btn--exit\">\n          <span className=\"long\">Close</span>\n          <span className=\"short\"><CloseIcon fontSize=\"small\" /></span>\n        </Link>\n        <button className=\"CreatePaletteNav-save btn btn--save\" onClick={handleClickOpen}>\n          <span className=\"long\">Save</span>\n          <span className=\"short\"><CheckIcon fontSize=\"small\" /></span>\n        </button>\n      </Stack>\n\n      <Dialog open={dialogOpen} onClose={handleClose}>\n        <ValidatorForm\n          onSubmit={handleSubmit}\n          onError={errors => console.log(errors)}\n        >\n          <DialogTitle>\n            Choose a palette name\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Note: palette names must be unique,\n              and a maximum length of 32 characters.\n            </DialogContentText>\n\n            {/* Palette name input */}\n            <TextValidator\n              label=\"Palette name\"\n              onChange={updateNewPaletteName}\n              name=\"newPaletteName\"\n              variant=\"standard\"\n              value={newPaletteName}\n              // size=\"small\"\n              // sx={{ margin: '1rem 0 .75rem 0' }}\n              fullWidth\n              validators={[\n                'required',\n                'paletteNameUnique',\n                'maxStringLength:32',\n                'matchRegexp:^[0-9A-Za-z #-]+$'\n              ]}\n              errorMessages={[\n                'Give this palette a name.',\n                'This palette name is already taken.',\n                'Too long! Max 32 characters.',\n                'No special characters please.'\n              ]}\n              autoFocus\n            />\n          </DialogContent>\n          <DialogActions>\n            <button className=\"btn btn--exit\" onClick={handleClose}>Cancel</button>\n            <button className=\"btn btn--save\" type=\"submit\">Save Palette</button>\n          </DialogActions>\n\n        </ValidatorForm>\n      </Dialog>\n\n    </React.Fragment>\n  );\n}\n\n\nexport default CreatePaletteNav;","import React, { useState, useEffect } from 'react';\nimport { HexColorPicker } from \"react-colorful\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport AddIcon from '@mui/icons-material/Add';\nimport chroma from 'chroma-js';\n\nimport './css/CreatePaletteTools.css';\n\n\nfunction CreatePaletteTools(props) {\n  // props\n  const {\n    addNewColor,\n    clearPalette,\n    maxColors,\n    colors\n  } = props;\n  // state\n  const [currentColor, setCurrentColor] = useState('#ff5252');\n  const [newColorName, setNewColorName] = useState('');\n  const [duplicateColor, setDuplicateColor] = useState('');\n\n  const paletteIsFull = colors.length >= maxColors;\n\n  const handlePickerChange = (color) => {\n    setCurrentColor(color);\n  };\n\n  const updateNewColorName = (e) => {\n    setNewColorName(e.target.value);\n  }\n\n  const setRandomColor = () => {\n    let randomColor = chroma.random().hex();\n    setCurrentColor(randomColor);\n  }\n\n  function handleAddNewColor() {\n    // Check that new color value doesn't already exist. This validation\n    // should happen on submit, whereas the ValidatorForm validation happens\n    // on change (of the input field) which doesn't work for checking the\n    // current color value.\n    let existingColor = colors.filter(c => c.value === currentColor)[0];\n    if (!existingColor) {\n      let newColor = {name: newColorName.trim(), value: currentColor};\n      addNewColor(newColor);\n      setNewColorName('');\n      setDuplicateColor('');\n    } else {\n      setDuplicateColor(existingColor.name);\n    }\n  }\n\n  /* Custom validators for TextValidator ----------------------------------- */\n  useEffect(() => {\n    ValidatorForm.addValidationRule('colorNameUnique', (value) => {\n      return colors.every(c => c.name.toLowerCase() !== value.trim().toLowerCase());\n    });\n  }, [colors]);\n\n  return (\n    <div className=\"CreatePaletteTools\">\n\n      <h2 className=\"CreatePaletteTools-header\">Add colours</h2>\n      <p className=\"CreatePaletteTools-subheader\">\n        to build your new palette.\n      </p>\n\n      <HexColorPicker\n        color={currentColor}\n        onChange={handlePickerChange}\n      />\n\n      <div className=\"CreatePaletteTools-btn-set\">\n        <button className=\"btn btn--plain\" onClick={setRandomColor}>\n          Random colour\n        </button>\n        <button className=\"btn btn--plain\" onClick={clearPalette}>\n          Clear palette\n        </button>\n      </div>\n\n      <ValidatorForm\n        onSubmit={handleAddNewColor}\n        onError={errors => console.log(errors)}\n      >\n        <TextValidator\n          label=\"Color name\"\n          onChange={updateNewColorName}\n          name=\"newColorName\"\n          variant=\"outlined\"\n          value={newColorName}\n          size=\"small\"\n          sx={{ margin: '.75rem 0 .75rem 0' }}\n          fullWidth\n          validators={[\n            'required',\n            'colorNameUnique',\n            'maxStringLength:32',\n            'matchRegexp:^[0-9A-Za-z #-]+$'\n          ]}\n          errorMessages={[\n            'Give this color a name.',\n            'Color names must be unique.',\n            'Too long! Max 32 characters.',\n            'No special characters please.'\n          ]}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn--CreatePaletteTools-add\"\n          title=\"Add colour\"\n          disabled={paletteIsFull}\n        >\n          <span\n            className=\"btn--CreatePaletteTools-add__chip\"\n            style={{ background: currentColor }}\n          ></span>\n          <AddIcon />\n        </button>\n      </ValidatorForm>\n\n      {paletteIsFull && (\n        <p className='CreatePaletteTools-msg'>\n          <span>Your palette is full. </span>\n          Palettes may have up to {maxColors} colours.\n          You can delete some of your colours if you want to add different ones.\n        </p>\n      )}\n\n      {duplicateColor && (\n        <p className='CreatePaletteTools-msg'>\n          <span>Duplicate! </span>\n          You already have the colour {currentColor} in your palette.\n          It's called {duplicateColor}.\n        </p>\n      )}\n    </div>\n  );\n}\n\n\nexport default CreatePaletteTools;","import React from \"react\";\nimport chroma from 'chroma-js';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { SortableElement } from \"react-sortable-hoc\";\n\nimport { analyzeContrast } from './helpers';\nimport './css/SortableChip.css';\n\n\n// function SortableChip(props) {\n//   const { color, name, deleteColor } = props;\n\n//   const goodContrast = analyzeContrast(\"fff\", color);\n//   const fontColor = goodContrast ? '#fff' : chroma(color).darken(3);\n\n//   function handleDeleteColor() {\n//     deleteColor(color);\n//   }\n//   return (\n\n//     <div className=\"SortableChip\" style={{ background: color }}>\n//       <div className=\"info-container\">\n//         <h2 className=\"info-name\" style={{ color: fontColor }} title={color}>\n//           {name}\n//         </h2>\n//         <button\n//           className=\"trash-icon-btn\"\n//           title=\"Delete color\"\n//           onClick={handleDeleteColor}\n//         >\n//           <DeleteIcon style={{ color: fontColor }} />\n//         </button>\n//       </div>\n//     </div>\n//   )\n// }\n\nconst SortableChip = SortableElement((props) => {\n  const { color, name, deleteColor } = props;\n\n  const goodContrast = analyzeContrast(\"fff\", color);\n  const fontColor = goodContrast ? '#fff' : chroma(color).darken(3);\n\n  function handleDeleteColor() {\n    deleteColor(color);\n  }\n  return (\n    <div className=\"SortableChip\" style={{ background: color }}>\n      <div className=\"SortableChip-info-container\">\n        <h2 className=\"SortableChip-info-name truncate\" style={{ color: fontColor }} title={color}>\n          {name}\n        </h2>\n        <button\n          className=\"SortableChip-trash-btn\"\n          title=\"Delete color\"\n          onClick={handleDeleteColor}\n        >\n          <DeleteIcon style={{ color: fontColor }} />\n        </button>\n      </div>\n    </div>\n  )\n});\n\nexport default SortableChip;","import React from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\n\nimport SortableChip from './SortableChip';\nimport './css/SortableList.css';\n\n// function SortableList(props) {\n//   const {colors, deleteColor } = props;\n//   return (\n//     <div className=\"CreatePalette-chips\">\n//       {colors.map(color => (\n//         <SortableChip\n//           key={color.value}\n//           color={color.value}\n//           name={color.name}\n//           deleteColor={deleteColor}\n//         />\n//       ))}\n//     </div>\n//   )\n// }\n\n\nconst SortableList = SortableContainer((props) => {\n  const {colors, deleteColor } = props;\n  return (\n    <div className=\"SortableList\">\n      {colors.map((color, i) => (\n        <SortableChip\n          index={i}\n          key={color.value}\n          color={color.value}\n          name={color.name}\n          deleteColor={deleteColor}\n        />\n      ))}\n    </div>\n  );\n});\n\nexport default SortableList;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport { toKebabCase } from './helpers';\nimport CreatePaletteNav from './CreatePaletteNav';\nimport CreatePaletteTools from './CreatePaletteTools';\nimport SortableList from './SortableList';\nimport './css/CreatePalette.css';\n\n\nconst starterColors = [\n  { name: 'light gray', value: '#b9b9b9' },\n  { name: 'silver', value: '#cbcbcb' },\n  { name: 'fog', value: '#dbdbdb' },\n  { name: 'mist', value: '#ebebeb' }\n];\n\n/* Material UI drawer stuff ------------------------------------------------ */\n\n// The color picker component is the main factor for drawer width\nconst drawerWidth = 260;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  }),\n);\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\n/* Main Component ------------------------------------------------------------ */\n\nfunction CreatePalette(props) {\n  // props\n  const { savePalette, seedPalettes, maxColors=20 } = props;\n  // state\n  const [drawerOpen, setDrawerOpen] = useState(true);\n  const [colors, setColors] = useState(starterColors);\n\n  const navigate = useNavigate();\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  const onSortEnd = ({oldIndex, newIndex}) => {\n    setColors(colors => arrayMove(colors, oldIndex, newIndex));\n  };\n\n  const addNewColor = (newColor) => {\n    setColors([...colors, newColor]);\n  };\n\n  const deleteColor = (color) => {\n    let updatedColors = colors.filter(c => c.value !== color);\n    setColors(updatedColors);\n  };\n\n  const clearPalette = () => {\n    setColors([]);\n  };\n\n  function handleSavePalette(newPaletteName) {\n    const newPalette = {\n      paletteName: newPaletteName.trim(),\n      id: toKebabCase(newPaletteName),\n      colors: colors\n    }\n    savePalette(newPalette);\n    navigate('/');\n  }\n\n  return (\n    <Box className=\"CreatePalette\" sx={{ display: 'flex' }}>\n      {/* MUI App bar -------------------------------------------------------- */}\n\n      <AppBar position=\"fixed\" open={drawerOpen} sx={{\n        background: \"whitesmoke\",\n        color: \"#000\",\n        boxShadow: \"none\",\n      }}>\n        <Toolbar className=\"CreatePalette-toolbar\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(drawerOpen && { display: 'none' }) }}\n          >\n            <TuneIcon sx={{ fontSize: '1.4rem' }} />\n          </IconButton>\n\n          <CreatePaletteNav\n            handleSavePalette={handleSavePalette}\n            seedPalettes={seedPalettes}\n          />\n\n        </Toolbar>\n      </AppBar>\n      {/* MUI Drawer -------------------------------------------------------- */}\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={drawerOpen}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </DrawerHeader>\n\n        <CreatePaletteTools\n          addNewColor={addNewColor}\n          clearPalette={clearPalette}\n          maxColors={maxColors}\n          colors={colors}\n        />\n\n      </Drawer>\n      {/* MUI Main content -------------------------------------------------- */}\n      <Main className=\"CreatePalette-main\" open={drawerOpen}>\n        <DrawerHeader /> {/* used as a spacer for the Drawer Header above */}\n\n        <SortableList\n          colors={ colors }\n          deleteColor={deleteColor}\n          axis=\"xy\"\n          onSortEnd={onSortEnd}\n          distance={2}\n        />\n\n      </Main>\n    </Box>\n  );\n}\n\n\nexport default CreatePalette;","import { useState, useEffect } from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport { StyledEngineProvider } from \"@mui/material/styles\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport seedPalettes from \"./seedPalettes\";\nimport Page from \"./Page\";\nimport PaletteList from \"./PaletteList\";\nimport Palette from \"./Palette\";\nimport ColorShades from \"./ColorShades\";\nimport CreatePalette from \"./CreatePalette\";\nimport NotFound from \"./NotFound\";\nimport \"./css/App.css\";\n\n\nfunction App() {\n  // First check if there is any data in localStorage\n  const storedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n  const [palettes, setPalettes] = useState(storedPalettes || seedPalettes);\n\n  const location = useLocation();\n\n  const savePalette = (newPalette) => {\n    setPalettes([...palettes, newPalette]);\n  };\n\n  const deletePalette = (paletteToDelete) => {\n    // Fade out the palette first by applying a class\n    document.getElementById(paletteToDelete.id).style.opacity = 0;\n    // The timeout delay should match the transition duration in PaletteChip.css\n    setTimeout(() => {\n      const remainingPalettes = palettes.filter(\n        (p) => p.id !== paletteToDelete.id\n      );\n      setPalettes(remainingPalettes);\n    }, 600);\n  };\n\n  // Save palettes to localStorage whenever palettes is changed\n  useEffect(() => {\n    window.localStorage.setItem(\"palettes\", JSON.stringify(palettes));\n  }, [palettes]);\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <div className=\"App\">\n        <TransitionGroup component={null}>\n          <CSSTransition key={location.key} classNames=\"fade\" timeout={400}>\n            <Routes location={location}>\n              <Route\n                path=\"/\"\n                element={\n                  <Page>\n                    <PaletteList\n                      deletePalette={deletePalette}\n                      seedPalettes={palettes}\n                    />\n                  </Page>\n                }\n              />\n              <Route\n                path=\"/palette/:id\"\n                element={\n                  <Page>\n                    <Palette seedPalettes={palettes} />\n                  </Page>\n                }\n              />\n              <Route path=\"/palette/:paletteId/:colorId\">\n                {/* Optional URL param for color format */}\n                <Route\n                  path=\":format\"\n                  element={\n                    <Page>\n                      <ColorShades seedPalettes={palettes} />\n                    </Page>\n                  }\n                />\n                <Route\n                  path=\"\"\n                  element={\n                    <Page>\n                      <ColorShades seedPalettes={palettes} />\n                    </Page>\n                  }\n                />\n              </Route>\n              <Route\n                path=\"/create\"\n                element={\n                  <Page>\n                    <CreatePalette\n                      savePalette={savePalette}\n                      seedPalettes={palettes}\n                    />\n                  </Page>\n                }\n              />\n              <Route path=\"*\" element={<Page><NotFound /></Page>}/>\n            </Routes>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n    </StyledEngineProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n// Order matters here for index CSS to load first\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}